#!/bin/bash

export CP="cp"
export RM="rm -fr"
export MKDIR="mkdir -p"
export LN="ln -s"
export CP="cp -r"
export MV="mv"

export THIS_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd . && pwd )"
export CONTEXTS_DIR="$THIS_SCRIPT_DIR/contexts"
export TOMCAT_DIR="$THIS_SCRIPT_DIR/apache-tomcat-8.5.4"
export OPENGROK_DIR="$THIS_SCRIPT_DIR/opengrok-0.12.1.5"

export GROK=$OPENGROK_DIR/bin/OpenGrok
export PRESERVED_OPTCONF=$THIS_SCRIPT_DIR/tomgrok-default-conf/options.conf

function OPTCONF {
    echo "$CONTEXTS_DIR/$1/etc/options.conf"
}

function create_context {
	# $CP $OPENGROK_DIR/lib/source.war $TOMCAT_DIR/webapps/$1.war
	unzip $OPENGROK_DIR/lib/source.war -d $TOMCAT_DIR/webapps/$1

	$MKDIR $CONTEXTS_DIR/$1/src
	$MKDIR $CONTEXTS_DIR/$1/data
	$MKDIR $CONTEXTS_DIR/$1/etc

    $CP $PRESERVED_OPTCONF `OPTCONF $1`
}


function remove_context {
	local tar_dir=$1
	local tar_war="${tar_dir}.war"
	$RM $TOMCAT_DIR/webapps/$tar_dir $TOMCAT_DIR/webapps/$tar_war $TOMCAT_DIR/work/Catalina/localhost/$tar_dir
	$RM $CONTEXTS_DIR/$1
}


# absolute path
function abs_path {
    if [ $1 == "." ]; then 
        echo `pwd`
    else
	    echo "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
    fi
}


#######
# Main
#######

case $1 in
    'version')
        echo 0.5
        ;;
    'port')
        if [ $# == 1 ]; then
            sed -e '/<Connector port=".*" protocol="HTTP\/1\.1"/!d' \
                -e 's/.*<Connector port="\(.*\)" .*/\1/' \
                $TOMCAT_DIR/conf/server.xml
        else
            if [ ! -f $TOMCAT_DIR/conf/server.xml.orig ]; then
                $CP $TOMCAT_DIR/conf/server.xml $TOMCAT_DIR/conf/server.xml.orig
            fi
            sed "s/<Connector port=\".*\" protocol=\"HTTP\/1\.1\"/<Connector port=\"$2\" protocol=\"HTTP\/1\.1\"/" \
                $TOMCAT_DIR/conf/server.xml > $TOMCAT_DIR/conf/server2.xml && \
                $MV $TOMCAT_DIR/conf/server.xml $TOMCAT_DIR/conf/server.xml.bak && \
                $MV $TOMCAT_DIR/conf/server2.xml $TOMCAT_DIR/conf/server.xml
        fi
        ;;
	'create')
		create_context $2
		;;
	'remove')
		remove_context $2
		;;
	'list')
        $MKDIR $CONTEXTS_DIR
		ls $CONTEXTS_DIR  # list all contexts
		;;
	'startup')
		if [ ! -d "$TOMCAT_DIR/logs" ]; then
			mkdir "$TOMCAT_DIR/logs"
		fi
		sh $TOMCAT_DIR/bin/startup.sh
		;;
	'shutdown')
		sh $TOMCAT_DIR/bin/shutdown.sh
		;;
	'link')
		# eg.
		#  $ tomgrok link haha proj1 (proj1-alias)
		# equals:
		#  $ ln -s /xx/yy/.../proj1 /aa/bb/.../contexts/haha/[proj1|proj1-alias]
        if [ $# -eq 3 ]; then
            $LN `abs_path $3` $CONTEXTS_DIR/$2/src/`basename $3`
        elif [ $# -eq 4 ]; then
            $LN `abs_path $3` $CONTEXTS_DIR/$2/src/$4
        else
            echo wrong link arguments
        fi
		;;
	'copy')
		# eg.
		#  $ tomgrok copy haha proj1 (proj1-alias)
		# equals:
		#  $ cp -r /xx/yy/.../proj1 /aa/bb/.../contexts/haha/[proj1|proj1-alias]
        if [ $# -eq 3 ]; then
            $CP `abs_path $3` $CONTEXTS_DIR/$2/src/`basename $3`
        elif [ $# -eq 4 ]; then
            $CP `abs_path $3` $CONTEXTS_DIR/$2/src/$4
        else
            echo wrong link arguments
        fi
		;;
	'link-projects')
        $RM $CONTEXTS_DIR/$2/src
        if [ $# -eq 3 ]; then
            $LN `abs_path $3` $CONTEXTS_DIR/$2/src
        else
            echo wrong link arguments
        fi
		;;
	'copy-projects')
        $RM $CONTEXTS_DIR/$2/src
        if [ $# -eq 3 ]; then
            $CP `abs_path $3` $CONTEXTS_DIR/$2/src
        else
            echo wrong link arguments
        fi
		;;
	'delete')
		$RM $CONTEXTS_DIR/$2/src/`basename $3`
		;;
	'index')
        # $2: context name
		# generate index data
		OPENGROK_INSTANCE_BASE=$CONTEXTS_DIR/$2 \
		 OPENGROK_TOMCAT_BASE=$TOMCAT_DIR \
		 OPENGROK_WEBAPP_CONTEXT=$2 \
         OPENGROK_CONFIGURATION=`OPTCONF $2` \
		 $GROK index

 		# update configuration.xml in container
	    conf_pathname=`echo $CONTEXTS_DIR/$2/etc/configuration\.xml | sed 's/\//\\\\\//g'`
		sed "s/<param-value>.*configuration\.xml<\/param-value>/<param-value>$conf_pathname<\/param-value>/" \
		 $TOMCAT_DIR/webapps/$2/WEB-INF/web.xml > $TOMCAT_DIR/webapps/$2/WEB-INF/web2.xml && \
		 $CP $TOMCAT_DIR/webapps/$2/WEB-INF/web.xml $TOMCAT_DIR/webapps/$2/WEB-INF/web.xml.bak && \
		 $MV $TOMCAT_DIR/webapps/$2/WEB-INF/web2.xml $TOMCAT_DIR/webapps/$2/WEB-INF/web.xml
		;;
	'index-all')
		# todo each all contexts to index
		;;
	*)
		echo "wrong command"
		;;
esac
